version: '3.8'
services:
  app:
    build: .
    command: npm run dev
    volumes:
      - ./:/app
      - /app/node_modules
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL
      - REDIS_URL
      - S3_ENDPOINT
      - S3_ACCESS_KEY
      - S3_SECRET_KEY
      - S3_BUCKET
      - JWT_SECRET
    depends_on:
      - postgres
      - redis
      - minio
      - clamav

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    command: npm run worker
    volumes:
      - ./:/worker
      - /worker/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL
      - REDIS_URL
      - S3_ENDPOINT
      - S3_ACCESS_KEY
      - S3_SECRET_KEY
      - S3_BUCKET
      - JWT_SECRET
    depends_on:
      - postgres
      - redis
      - minio
      - clamav

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nido_media
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - miniodata:/data

  clamav:
    image: mkodockx/docker-clamav:alpine
    ports:
      - "3310:3310"

volumes:
  pgdata:
  miniodata:
